pipeline {  
  agent any 
  def to = emailextrecipients([
          [$class: 'CulpritsRecipientProvider'],
          [$class: 'DevelopersRecipientProvider'],
          [$class: 'RequesterRecipientProvider']
  ])
  
  tools {    
    maven 'Maven'  
  }  
  try {
    stages {   
      stage('Git checkout')    {     
        steps {
          sh 'echo $PWD'
          sh 'which git'
          git 'https://github.com/joneschmitz/cicd-project.git'     
        }    
      }    
      stage('Maven compile')    {    
        steps {      
          sh ' mvn clean compile war:war'    
        }    
      }    
      stage('Test')    {    
        steps {      
          sh 'mvn test'    
        }        
      }
      stage('Deploy') {
        steps {
          deploy adapters: [tomcat9(credentialsId: 'Tomcat-Token', path: '', url: 'http://ec2-3-15-222-123.us-east-2.compute.amazonaws.com:8081/manager')], contextPath: null, war: '**/*.war'
        }
      }
    }
  } catch(e) {
    // mark build as failed
    currentBuild.result = "FAILURE";
    // set variables
    def subject = "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} ${currentBuild.result}"
    def content = '${JELLY_SCRIPT,template="html"}'

    // send email
    if(to != null && !to.isEmpty()) {
      emailext(body: content, mimeType: 'text/html',
         replyTo: '$DEFAULT_REPLYTO', subject: subject,
         to: to, attachLog: true )
     }
  }
}
